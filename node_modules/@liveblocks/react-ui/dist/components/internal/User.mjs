'use client';
import { useUser } from '@liveblocks/react';
import React__default, { useMemo } from 'react';
import { useOverrides } from '../../overrides.mjs';
import { useCurrentUserId } from '../../shared.mjs';
import { capitalize } from '../../utils/capitalize.mjs';
import { classNames } from '../../utils/class-names.mjs';

function User({
  userId,
  replaceSelf,
  capitalize: shouldCapitalize,
  className,
  ...props
}) {
  const currentId = useCurrentUserId();
  const { user, isLoading } = useUser(userId);
  const $ = useOverrides();
  const resolvedUserName = useMemo(() => {
    const name = replaceSelf && currentId === userId ? $.USER_SELF : user?.name ?? $.USER_UNKNOWN;
    return shouldCapitalize ? capitalize(name) : name;
  }, [
    replaceSelf,
    currentId,
    userId,
    $.USER_SELF,
    $.USER_UNKNOWN,
    user?.name,
    shouldCapitalize
  ]);
  return /* @__PURE__ */ React__default.createElement("span", {
    className: classNames("lb-name lb-user", className),
    "data-loading": isLoading ? "" : void 0,
    ...props
  }, isLoading ? null : resolvedUserName);
}

export { User };
//# sourceMappingURL=User.mjs.map

import { U as UseThreadsOptions } from './suspense-HhfQZzDE.mjs';
export { b as ClientContext, C as ClientSideSuspense, V as CreateThreadError, L as LiveblocksProvider, M as MutationContext, R as RoomContext, i as RoomProvider, a as UseStorageStatusOptions, c as createLiveblocksContext, h as createRoomContext, j as useAddReaction, k as useBatch, l as useBroadcastEvent, m as useCanRedo, n as useCanUndo, u as useClient, T as useCommentsErrorListener, o as useCreateComment, p as useCreateThread, f as useDeleteAllInboxNotifications, q as useDeleteComment, g as useDeleteInboxNotification, r as useDeleteThread, s as useEditComment, t as useEditThreadMetadata, x as useErrorListener, y as useEventListener, z as useHistory, _ as useInboxNotificationThread, a3 as useInboxNotifications, A as useLostConnectionListener, d as useMarkAllInboxNotificationsAsRead, e as useMarkInboxNotificationAsRead, B as useMarkThreadAsRead, v as useMarkThreadAsResolved, w as useMarkThreadAsUnresolved, D as useMutation, E as useMyPresence, W as useOther, X as useOthers, Y as useOthersConnectionIds, F as useOthersListener, Z as useOthersMapped, G as useRedo, H as useRemoveReaction, I as useRoom, a4 as useRoomInfo, J as useRoomNotificationSettings, $ as useSelf, K as useStatus, a0 as useStorage, N as useStorageRoot, a1 as useStorageStatus, O as useThreadSubscription, a2 as useThreads, P as useUndo, a5 as useUnreadInboxNotificationsCount, Q as useUpdateMyPresence, S as useUpdateRoomNotificationSettings, a6 as useUser } from './suspense-HhfQZzDE.mjs';
export { Json, JsonObject, shallow } from '@liveblocks/client';
import { BaseMetadata, CacheState, ThreadData } from '@liveblocks/core';
import 'react';

/**
 * @private Do not rely on this internal API.
 */
declare function selectedThreads<M extends BaseMetadata>(roomId: string, state: CacheState<M>, options: UseThreadsOptions<M>): ThreadData<M>[];

export { UseThreadsOptions, selectedThreads };
